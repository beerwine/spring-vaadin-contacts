<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"
    default-autowire="byName">
    
    <context:component-scan base-package="com.contacts.dao" />   

    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
       <property name="configLocation" value="classpath:hibernate.cfg.xml" />
       <property name="hibernateProperties">
           <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.query.factory_class">org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory</prop>
                <prop key="hibernate.bytecode.use_reflection_optimizer">false</prop>
                <prop key="hibernate.show_sql">${hibernate.show.sql}</prop>
                <prop key="hibernate.use_sql_comments">${hibernate.show.sql}</prop>
                <prop key="hibernate.jdbc.use_scrollable_resultset">true</prop>
                <prop key="hibernate.jdbc.batch_size">200</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.hibernate.generate_statistics">false</prop>
                <prop key="hibernate.id.new_generator_mappings">false</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.generate.schema}</prop>
                <!-- Hibernate 2nd level cache section -->
                <prop key="hibernate.cache.use_structured_entries">true</prop>
                <prop key="hibernate.cache.use_second_level_cache">${hibernate.user.second_level_cache}</prop>
                <prop key="hibernate.cache.use_query_cache">${hibernate.user.second_level_cache}</prop>
                <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory</prop>
           </props>
       </property>
       <property name="dataSource" ref="c3p0DataSource"/>
   </bean>
   
   <bean id="c3p0DataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${hibernate.connection.driver_class}" />
        <property name="jdbcUrl" value="${hibernate.connection.url}" />
        <property name="properties">
            <props>
				<prop key="user">${hibernate.connection.username}</prop>
                <prop key="password">${hibernate.connection.password}</prop>
            </props>
        </property>
        <property name="initialPoolSize" value="${hibernate.initialPoolSize}" /> <!-- number of connection after startup - standard is 3 -->
        <property name="minPoolSize" value="${hibernate.minPoolSize}" /> <!-- minimal number of connections -->
        <property name="maxPoolSize" value="${hibernate.maxPoolSize}" /> <!-- maximal number of connections -->
        <property name="maxIdleTime" value="${hibernate.maxIdleTime}" /> <!-- after how long will inactive connection be terminated -->
        <property name="maxStatements" value="${hibernate.maxStatements}" /> <!-- maximal number of prepared statements in pool -->
        <property name="idleConnectionTestPeriod" value="${hibernate.idleConnectionTestPeriod}" /> <!-- after how long will be connection tested for inactivity -->
    </bean>
    
    <bean class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" id="dataSource">
        <property name="driverClassName" value="${hibernate.connection.driver_class}"/>
        <property name="url" value="${hibernate.connection.url}"/>
        <property name="username" value="${hibernate.connection.username}"/>
        <property name="password" value="${hibernate.connection.password}"/>
    </bean>
    
    <!-- Repositories -->
    <bean id="contactDaoImpl" class="com.contacts.dao.hibernate.ContactDaoImpl">
    	<property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <bean id="countryDaoImpl" class="com.contacts.dao.hibernate.CountryDaoImpl">
    	<property name="sessionFactory" ref="sessionFactory"/>
    </bean>
 </beans>